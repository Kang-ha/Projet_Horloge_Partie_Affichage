/**
 * ======================================
 *    M5Stack_Core2_Default_Test.ino
 * ======================================
 * 
 * Ce fichier contient un test simple pour :
 * - afficher le niveau de batterie sur l'√©cran
 * - d√©tecter les pressions des boutons A, B et C
 * 
 * Le test met √† jour les donn√©es toutes les secondes.
 */

#include <M5Core2.h>  // Librairie principale du M5Stack Core2

// ===============================
// Fonction de test par d√©faut
// ===============================
void testDefault() {
  // üîÑ Met √† jour les entr√©es (notamment les boutons)
  M5.update();

  // üîã Lecture de la tension de la batterie (volts)
  float batteryVoltage = M5.Axp.GetBatVoltage();

  // üîÑ Conversion en pourcentage (approximation de l‚Äô√©tat de charge d‚Äôune LiPo)
  float batteryPercent = (batteryVoltage - 3.0) / (4.2 - 3.0) * 100.0;

  // üîí Limite la valeur entre 0% et 100%
  if (batteryPercent > 100.0) batteryPercent = 100.0;
  if (batteryPercent < 0.0)   batteryPercent = 0.0;

  // üñ•Ô∏è Efface la zone batterie de l'√©cran avant d'√©crire
  M5.Lcd.fillRect(20, 60, 200, 20, BLACK);

  // üñäÔ∏è Affiche le pourcentage de batterie √† l'√©cran
  M5.Lcd.setCursor(20, 60);
  M5.Lcd.printf("Battery: %.1f%%", batteryPercent);

  // üîò Si le bouton A est press√©
  if (M5.BtnA.wasPressed()) {
    Serial.println("Bouton A press√©");           // Log s√©rie
    M5.Lcd.setCursor(20, 100);                   // Affichage √©cran
    M5.Lcd.println("Btn A pressed");
  }

  // üîò Si le bouton B est press√©
  if (M5.BtnB.wasPressed()) {
    Serial.println("Bouton B press√©");
    M5.Lcd.setCursor(20, 120);
    M5.Lcd.println("Btn B pressed");
  }

  // üîò Si le bouton C est press√©
  if (M5.BtnC.wasPressed()) {
    Serial.println("Bouton C press√©");
    M5.Lcd.setCursor(20, 140);
    M5.Lcd.println("Btn C pressed");
  }

  // ‚è±Ô∏è Attente d‚Äô1 seconde avant prochaine mise √† jour
  delay(1000);
}